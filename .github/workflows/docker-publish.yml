name: Docker to ghcr.io

on:
  release:
    types: [created]

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: docker-compose --file docker-compose.yml build

  push:
    needs: test

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Builder
        id: buildx
        uses: docker/setup-buildx-action@v1.5.0

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GCR_PAT }}

      - name: Setup Environment
        run: |
          echo "IMAGE=ghcr.io/${{ github.repository }}" >> $GITHUB_ENV
          echo "VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          echo "GITHUB_SHORT_SHA=${GITHUB_SHA:1:7}" >> $GITHUB_ENV
          echo "GITHUB_REFNAME=${GITHUB_REF#refs/*/}" >> GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Build image and push
        uses: docker/build-push-action@v2.8.0
        with:
          context: node-app
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          labels: |
            org.opencontainers.image.title=Ezlo-MQTTRelay
            org.opencontainers.image.authors=bruce@blacey.com
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.description=Created from commit ${{ env.GITHUB_SHORT_SHA }}, (ref ${{ env.GITHUB_REF_NAME }})
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ env.GITHUB_REFNAME }}
            org.opencontainers.image.version=${{ env.VERSION }}
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.VERSION }}
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
